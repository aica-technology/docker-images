name: Check for updated upstream libraries (develop branches)

# Run scheduled workflow
on:
  schedule:
   - cron: '20 3,13 * * MON-FRI'
  workflow_dispatch:

env:
  CI_BRANCH: 'ci'

jobs:

  check-hash:
    runs-on: ubuntu-latest
    name: Check latest hashes on control libraries and modulo
    outputs:
      cl_id: ${{ steps.check_cl.outputs.id }}
      cl_rebuild: ${{ steps.check_cl.outputs.rebuild }}
      modulo_develop_id: ${{ steps.check_modulo_develop.outputs.id }}
      modulo_develop_rebuild: ${{ steps.check_modulo_develop.outputs.rebuild }}
      modulo_humble_id: ${{ steps.check_modulo_humble.outputs.id }}
      modulo_humble_rebuild: ${{ steps.check_modulo_humble.outputs.rebuild }}
    steps:
      - name: Checkout CI branch
        uses: actions/checkout@v2
        with:
          ref: ${{ env.CI_BRANCH }}

      - name: Check latest hash on control libraries develop branch
        id: check_cl
        run: |
          NEW_HASH=$(git ls-remote https://github.com/epfl-lasa/control-libraries.git develop | awk '{ print $1 }')
          OLD_HASH=$(cat ./control-libraries-develop-hash || echo '')
          if [ "${NEW_HASH}" = "${OLD_HASH}" ]; then
            echo "Control libraries doesn't have new commits."
            echo "::set-output name=rebuild::false"
          else
            echo "Control libraries have new commits, rebuilding image now..."
            echo "::set-output name=rebuild::true"
            echo "::set-output name=id::${NEW_HASH}"
          fi

      - name: Check latest hash on modulo develop branch
        id: check_modulo_develop
        run: |
          NEW_HASH=$(git ls-remote https://github.com/epfl-lasa/modulo.git develop | awk '{ print $1 }')
          OLD_HASH=$(cat ./modulo-develop-hash || echo '')
          if [ "${NEW_HASH}" = "${OLD_HASH}" ]; then
            echo "Modulo doesn't have new commits."
            echo "::set-output name=rebuild::false"
          else
            echo "Modulo has new commits, rebuilding image now..."
            echo "::set-output name=rebuild::true"
            echo "::set-output name=id::${NEW_HASH}"
          fi

      - name: Check latest hash on modulo humble branch
        id: check_modulo_humble
        run: |
          NEW_HASH=$(git ls-remote https://github.com/epfl-lasa/modulo.git humble | awk '{ print $1 }')
          OLD_HASH=$(cat ./modulo-humble-hash || echo '')
          if [ "${NEW_HASH}" = "${OLD_HASH}" ]; then
            echo "Modulo doesn't have new commits."
            echo "::set-output name=rebuild::false"
          else
            echo "Modulo has new commits, rebuilding image now..."
            echo "::set-output name=rebuild::true"
            echo "::set-output name=id::${NEW_HASH}"
          fi

  rebuild-cl-galactic-image:
    needs: check-hash
    runs-on: ubuntu-latest
    name: Rebuild ros2-control-libraries galactic-devel image
    steps:
      - name: Checkout repository
        if: ${{ needs.check-hash.outputs.cl_rebuild == 'true' }}
        uses: actions/checkout@v2

      - name: Build new ros2-control-libraries galactic image
        if: ${{ needs.check-hash.outputs.cl_rebuild == 'true' }}
        uses: ./.github/actions/build-push
        with:
          workspace: ros2-control-libraries
          base_tag: galactic
          cl_branch: develop
          output_tag: galactic-devel-nightly
          ci_branch: ${{ env.CI_BRANCH }}
          secret: ${{ secrets.GITHUB_TOKEN }}

      - name: Write hash to file and push to ci branch
        if: ${{ needs.check-hash.outputs.cl_rebuild == 'true' }}
        uses: ./.github/actions/write-hash
        with:
          hash: ${{ needs.check-hash.outputs.cl_id }}
          file: './control-libraries-develop-hash'
          ci_branch: ${{ env.CI_BRANCH }}

  rebuild-modulo-galactic-image:
    needs: [check-hash, rebuild-cl-galactic-image]
    runs-on: ubuntu-latest
    name: Rebuild ros2-modulo galactic-devel image
    if: needs.check-hash.outputs.cl_rebuild == 'true' || needs.check-hash.outputs.modulo_develop_rebuild == 'true'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Build new ros2-modulo galactic-devel image
        uses: ./.github/actions/build-push
        with:
          workspace: ros2-modulo
          base_tag: galactic-devel-nightly
          modulo_branch: develop
          ci_branch: ${{ env.CI_BRANCH }}
          secret: ${{ secrets.GITHUB_TOKEN }}

      - name: Write hash to file and push to ci branch
        if: ${{ needs.check-hash.outputs.modulo_develop_rebuild == 'true' }}
        uses: ./.github/actions/write-hash
        with:
          hash: ${{ needs.check-hash.outputs.modulo_develop_id }}
          file: './modulo-develop-hash'
          ci_branch: ${{ env.CI_BRANCH }}

  rebuild-modulo-control-galactic-image:
    needs: [ check-hash, rebuild-cl-galactic-image, rebuild-modulo-galactic-image ]
    runs-on: ubuntu-latest
    name: Rebuild ros2-modulo-control galactic-devel image
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Build new ros2-modulo-control galactic-devel image
        uses: ./.github/actions/build-push
        with:
          workspace: ros2-modulo-control
          base_tag: galactic-devel-nightly
          dockerfile_extension: .galactic
          ci_branch: ${{ env.CI_BRANCH }}
          secret: ${{ secrets.GITHUB_TOKEN }}

  rebuild-cl-humble-image:
    needs: check-hash
    runs-on: ubuntu-latest
    name: Rebuild ros2-control-libraries humble-devel image
    steps:
      - name: Checkout repository
        if: ${{ needs.check-hash.outputs.cl_rebuild == 'true' }}
        uses: actions/checkout@v2

      - name: Build new ros2-control-libraries humble image
        if: ${{ needs.check-hash.outputs.cl_rebuild == 'true' }}
        uses: ./.github/actions/build-push
        with:
          workspace: ros2-control-libraries
          base_tag: humble
          cl_branch: develop
          output_tag: humble-devel-nightly
          ci_branch: ${{ env.CI_BRANCH }}
          secret: ${{ secrets.GITHUB_TOKEN }}

      - name: Write hash to file and push to ci branch
        if: ${{ needs.check-hash.outputs.cl_rebuild == 'true' }}
        uses: ./.github/actions/write-hash
        with:
          hash: ${{ needs.check-hash.outputs.cl_id }}
          file: './control-libraries-humble-develop-hash'
          ci_branch: ${{ env.CI_BRANCH }}

  rebuild-modulo-humble-image:
    needs: [ check-hash, rebuild-cl-humble-image ]
    runs-on: ubuntu-latest
    name: Rebuild ros2-modulo humble-devel image
    if: needs.check-hash.outputs.cl_rebuild == 'true' || needs.check-hash.outputs.modulo_humble_rebuild == 'true'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Build new ros2-modulo humble-devel image
        uses: ./.github/actions/build-push
        with:
          workspace: ros2-modulo
          base_tag: humble-devel-nightly
          modulo_branch: humble
          ci_branch: ${{ env.CI_BRANCH }}
          secret: ${{ secrets.GITHUB_TOKEN }}

      - name: Write hash to file and push to ci branch
        if: ${{ needs.check-hash.outputs.modulo_humble_rebuild == 'true' }}
        uses: ./.github/actions/write-hash
        with:
          hash: ${{ needs.check-hash.outputs.modulo_humble_id }}
          file: './modulo-humble-hash'
          ci_branch: ${{ env.CI_BRANCH }}

  rebuild-modulo-control-humble-image:
    needs: [ check-hash, rebuild-cl-humble-image, rebuild-modulo-humble-image ]
    runs-on: ubuntu-latest
    name: Rebuild ros2-modulo-control humble-devel image
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Build new ros2-modulo-control humble-devel image
        uses: ./.github/actions/build-push
        with:
          workspace: ros2-modulo-control
          base_tag: humble-devel-nightly
          dockerfile_extension: .humble
          ci_branch: ${{ env.CI_BRANCH }}
          secret: ${{ secrets.GITHUB_TOKEN }}
