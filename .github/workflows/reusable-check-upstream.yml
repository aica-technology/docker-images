name: Reusable workflow for build and push multi-arch images

on:
  workflow_call:
    inputs:
      upstream_branch:
        required: true
        type: string
      ci_branch:
        required: true
        type: string
    secrets:
      registry_token:
        required: true

jobs:
  check-hash:
    runs-on: ubuntu-latest
    name: Check latest hashes on control libraries and modulo
    outputs:
      cl_id: ${{ steps.check_cl.outputs.id }}
      cl_rebuild: ${{ steps.check_cl.outputs.rebuild }}
      modulo_id: ${{ steps.check_modulo.outputs.id }}
      modulo_rebuild: ${{ steps.check_modulo.outputs.rebuild }}
      image_tag: ${{ steps.parse_tag.outputs.tag }}
    steps:
      - name: Checkout CI branch
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.ci_branch }}

      - name: Parse tag for images
        id: parse_tag
        run: |
          if [[ "${{ inputs.upstream_branch }}" == "main" ]]; then
            IMAGE_TAG=humble
          elif [[ "${{ inputs.upstream_branch }}" == "develop" ]]; then
            IMAGE_TAG=humble-devel
          else
            echo "::error::Invalid upstream branch. Needs to be either 'main' or 'develop'."
            exit 1
          fi
          echo "tag=${IMAGE_TAG}" >> $GITHUB_OUTPUT

      - name: Check latest hash on control libraries
        id: check_cl
        run: |
          NEW_HASH=$(git ls-remote https://github.com/epfl-lasa/control-libraries.git ${{ inputs.upstream_branch }} | awk '{ print $1 }')
          OLD_HASH=$(cat ./control-libraries-${{ inputs.upstream_branch }}-hash || echo '')
          if [ "${NEW_HASH}" = "${OLD_HASH}" ]; then
            echo "Control libraries doesn't have new commits."
            echo "rebuild=false" >> $GITHUB_OUTPUT
          else
            echo "Control libraries have new commits, rebuilding image now..."
            echo "rebuild=true" >> $GITHUB_OUTPUT
            echo "id=${NEW_HASH}" >> $GITHUB_OUTPUT
          fi

      - name: Check latest hash on modulo
        id: check_modulo
        run: |
          NEW_HASH=$(git ls-remote https://github.com/epfl-lasa/modulo.git ${{ inputs.upstream_branch }} | awk '{ print $1 }')
          OLD_HASH=$(cat ./modulo-${{ inputs.upstream_branch }}-hash || echo '')
          if [ "${NEW_HASH}" = "${OLD_HASH}" ]; then
            echo "Modulo doesn't have new commits."
            echo "rebuild=false" >> $GITHUB_OUTPUT
          else
            echo "Modulo has new commits, rebuilding image now..."
            echo "rebuild=true" >> $GITHUB_OUTPUT
            echo "id=${NEW_HASH}" >> $GITHUB_OUTPUT
          fi

  rebuild-cl-humble-image:
    needs: check-hash
    runs-on: ubuntu-latest
    name: Rebuild ros2-control-libraries humble image
    steps:
      - name: Checkout repository
        if: ${{ needs.check-hash.outputs.cl_rebuild == 'true' }}
        uses: actions/checkout@v3

      - name: Build new ros2-control-libraries humble image
        if: ${{ needs.check-hash.outputs.cl_rebuild == 'true' }}
        uses: ./.github/actions/build-push-multi-arch
        with:
          workspace: ros2-control-libraries
          base_tag: humble
          cl_branch: ${{ inputs.upstream_branch }}
          output_tag: ${{ needs.check-hash.outputs.image_tag }}
          ci_branch: ${{ inputs.ci_branch }}
          secret: ${{ secrets.github_token }}

      - name: Write hash to file and push to ci branch
        if: ${{ needs.check-hash.outputs.cl_rebuild == 'true' }}
        uses: ./.github/actions/write-hash
        with:
          hash: ${{ needs.check-hash.outputs.cl_id }}
          file: ./control-libraries-${{ inputs.upstream_branch }}-hash
          ci_branch: ${{ inputs.ci_branch }}

  rebuild-modulo-humble-image:
    needs: [check-hash, rebuild-cl-humble-image]
    runs-on: ubuntu-latest
    name: Rebuild ros2-modulo humble image
    if: needs.check-hash.outputs.cl_rebuild == 'true' || needs.check-hash.outputs.modulo_rebuild == 'true'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Build new ros2-modulo humble image
        uses: ./.github/actions/build-push-multi-arch
        with:
          workspace: ros2-modulo
          base_tag: ${{ needs.check-hash.outputs.image_tag }}
          modulo_branch: ${{ inputs.upstream_branch }}
          output_tag: ${{ needs.check-hash.outputs.image_tag }}
          ci_branch: ${{ inputs.ci_branch }}
          secret: ${{ secrets.github_token }}

      - name: Write hash to file and push to ci branch
        if: ${{ needs.check-hash.outputs.modulo_rebuild == 'true' }}
        uses: ./.github/actions/write-hash
        with:
          hash: ${{ needs.check-hash.outputs.modulo_id }}
          file: ./modulo-${{ inputs.upstream_branch }}-hash
          ci_branch: ${{ inputs.ci_branch }}

  rebuild-modulo-control-humble-image:
    needs: [ rebuild-modulo-humble-image ]
    runs-on: ubuntu-latest
    name: Rebuild ros2-modulo-control humble image
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Build new ros2-modulo-control humble image
        uses: ./.github/actions/build-push-multi-arch
        with:
          workspace: ros2-modulo-control
          base_tag: ${{ needs.check-hash.outputs.image_tag }}
          dockerfile_extension: .humble
          output_tag: ${{ needs.check-hash.outputs.image_tag }}
          ci_branch: ${{ inputs.ci_branch }}
          secret: ${{ secrets.github_token }}
