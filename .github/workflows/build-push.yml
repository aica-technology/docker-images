name: Build and Push

# Run workflow on pushes to main branch
on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  CI_BRANCH: 'ci'

jobs:

  create-new-ci-branch:
    runs-on: ubuntu-latest
    name: Create new ci branch from main
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Recreate ci branch
        run: |
          git config user.name github-actions
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
          git checkout -b ${{ env.CI_BRANCH }} origin/main && git push -f -u origin ${{ env.CI_BRANCH }}

  build-publish-galactic-workspace:
    needs: create-new-ci-branch
    runs-on: ubuntu-latest
    name: Build and publish ROS2 galactic workspace image
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Build and Push
        uses: ./.github/actions/build-push
        with:
          workspace: ros2-ws
          ros_version: galactic
          secret: ${{ secrets.GITHUB_TOKEN }}

  build-publish-galactic-control-libraries-devel:
    needs: build-publish-galactic-workspace
    runs-on: ubuntu-latest
    name: Build and publish development ROS2 galactic workspace image with control libraries installed
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Build and Push
        uses: ./.github/actions/build-push
        with:
          workspace: ros2-control-libraries
          ros_version: galactic
          cl_branch: develop
          output_tag: galactic-devel
          secret: ${{ secrets.GITHUB_TOKEN }}

      - name: Get control libraries hash
        run: |
          HASH=$(git ls-remote https://github.com/epfl-lasa/control-libraries.git develop | awk '{ print $1 }')
          echo "CL_HASH=${HASH}" >> $GITHUB_ENV

      - name: Write hash
        uses: ./.github/actions/write-hash
        with:
          hash: ${{ env.CL_HASH }}
          file: ./control-libraries-hash
          ci_branch: ci

  build-publish-galactic-control-libraries:
    needs: build-publish-galactic-workspace
    runs-on: ubuntu-latest
    name: Build and publish ROS2 galactic workspace image with control libraries installed
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Build and Push
        uses: ./.github/actions/build-push
        with:
          workspace: ros2-control-libraries
          ros_version: galactic
          cl_branch: main
          secret: ${{ secrets.GITHUB_TOKEN }}

  build-publish-galactic-modulo-devel:
    needs: build-publish-galactic-control-libraries-devel
    runs-on: ubuntu-latest
    name: Build and publish development ROS2 galactic workspace image with modulo installed
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Build and Push
        uses: ./.github/actions/build-push
        with:
          workspace: ros2-modulo
          base_tag: galactic-devel
          modulo_branch: develop
          secret: ${{ secrets.GITHUB_TOKEN }}

      - name: Get modulo hash
        run: |
          HASH=$(git ls-remote https://github.com/epfl-lasa/modulo.git develop | awk '{ print $1 }')
          echo "MODULO_HASH=${HASH}" >> $GITHUB_ENV

      - name: Write hash
        uses: ./.github/actions/write-hash
        with:
          hash: ${{ env.MODULO_HASH }}
          file: ./modulo-hash
          ci_branch: ci

  build-publish-galactic-modulo:
    needs: build-publish-galactic-control-libraries
    runs-on: ubuntu-latest
    name: Build and publish ROS2 galactic workspace image with modulo installed
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Build and Push
        uses: ./.github/actions/build-push
        with:
          workspace: ros2-modulo
          ros_version: galactic
          modulo_branch: main
          secret: ${{ secrets.GITHUB_TOKEN }}

  build-publish-galactic-modulo-control-devel:
    needs: build-publish-galactic-modulo-devel
    runs-on: ubuntu-latest
    name: Build and publish ROS2 galactic workspace image with modulo and ros2 control installed
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Build and Push
        uses: ./.github/actions/build-push
        with:
          workspace: ros2-modulo-control
          base_tag: galactic-devel
          secret: ${{ secrets.GITHUB_TOKEN }}

  build-publish-galactic-modulo-control:
    needs: build-publish-galactic-modulo
    runs-on: ubuntu-latest
    name: Build and publish ROS2 galactic workspace image with modulo and ros2 control installed
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Build and Push
        uses: ./.github/actions/build-push
        with:
          workspace: ros2-modulo-control
          ros_version: galactic
          secret: ${{ secrets.GITHUB_TOKEN }}
